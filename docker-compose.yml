services:
  postgres:
    image: postgres:16.0-alpine3.18
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    command:
      - "postgres"
      - "-c"
      - "port=${POSTGRES_PORT}"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7.2.5
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/root/redis/
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=${REDIS_DATABASES_NUM}

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - ${PROMETHEUS_PORT}:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - grafana_storage:/var/lib/grafana

  elasticsearch:
    image: elasticsearch:8.13.0
    container_name: elasticsearch
    healthcheck:
      test: "curl -s -f -u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} http://127.0.0.1:9200/_cluster/health"
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 40s
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - ${ELASTIC_PORT}:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data

  user_init:
    image: curlimages/curl
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./init:/init
    entrypoint: ["/bin/sh", "/init/user_init.sh"]
    environment:
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTIC_HOST=${ELASTIC_HOST}
      - ELASTIC_PORT=${ELASTIC_PORT}
      - KIBANA_USER=${KIBANA_USER}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}

  kibana:
    image: kibana:8.13.0
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
      user_init:
        condition: service_completed_successfully
    environment:
      - ELASTICSEARCH_HOSTS=http://${ELASTIC_HOST}:${ELASTIC_PORT}
      - XPACK_SECURITY_ENABLED=true
      - ELASTICSEARCH_USERNAME=${KIBANA_USER}
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - LOG_LEVEL=debug
    ports:
      - ${KIBANA_PORT}:5601

volumes:
  postgres:
  redis:
  redis_data:
  prometheus:
  prometheus_data:
  grafana:
  grafana_storage:
  esdata:
